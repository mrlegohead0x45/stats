var searchIndex = JSON.parse('{\
"stats":{"doc":"Library for calculating statistics on collections of …","t":[8,8,11,11,11,11,11,11,11,11,11,11,11,11],"n":["NumExt","Stats","checked_mean","checked_mean","count","count","mean","mean","panicking_count","panicking_count","sum","sum","variance","variance"],"q":["stats","","","","","","","","","","","","",""],"d":["Trait for a number-like type that we can calculate …","A trait to be implemented for collection-like types that …","Like <code>Stats::mean</code>, but returns <code>None</code> if the collection is …","Like <code>Stats::mean</code>, but returns <code>None</code> if the collection is …","Count the items in the collection","Count the items in the collection","Find the mean of the collection","Find the mean of the collection","Return the length of the collection as a <code>Self::Item</code>. Will …","Return the length of the collection as a <code>Self::Item</code>. Will …","Calculate the sum of all the items in the collection","Calculate the sum of all the items in the collection","Find the variance of the collection. The variance is the …","Find the variance of the collection. The variance is the …"],"i":[0,0,3,3,3,3,3,3,3,3,3,3,3,3],"f":[0,0,[[],1],[[],1],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[4,"Option"],[15,"usize"],[8,"Stats"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
